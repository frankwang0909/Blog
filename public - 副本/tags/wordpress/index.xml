<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wordpress on Frank Wang&#39;s Coding World</title>
    <link>http://www.wangxingfeng.com/tags/wordpress/index.xml</link>
    <description>Recent content in Wordpress on Frank Wang&#39;s Coding World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <atom:link href="http://www.wangxingfeng.com/tags/wordpress/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>在 CentOS 上搭建 WordPress 博客</title>
      <link>http://www.wangxingfeng.com/centos_wordpress.html</link>
      <pubDate>Wed, 02 Aug 2017 21:23:27 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/centos_wordpress.html</guid>
      <description>

&lt;p&gt;在资金预算或人力资源有限的情况下， &lt;code&gt;WordPress&lt;/code&gt; 仍然是快速地搭建博客或者企业网站的不二选择。&lt;/p&gt;

&lt;p&gt;最近，边学边干地使用 &lt;code&gt;WordPres&lt;/code&gt;s 给兄弟公司搭建一个简单的官网。代码在本地调试好了。今天学习了如何学在服务器上发布这个程序。&lt;/p&gt;

&lt;p&gt;备注：服务器是腾讯上的云主机， 操作系统是 &lt;code&gt;CentOS&lt;/code&gt; 6.8 64 位的。&lt;/p&gt;

&lt;h2 id=&#34;1-准备-lnmp-环境&#34;&gt;1. 准备 LNMP 环境&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;LNMP&lt;/code&gt; 是 &lt;code&gt;Linux、Nginx、MySQL 和 PHP&lt;/code&gt; 的缩写，是 &lt;code&gt;WordPress&lt;/code&gt;博客系统依赖的基础运行环境。我们先来准备 LNMP 环境。&lt;/p&gt;

&lt;h3 id=&#34;1-1-安装-nginx&#34;&gt;1.1 安装 Nginx&lt;/h3&gt;

&lt;p&gt;使用 &lt;code&gt;yum&lt;/code&gt; 安装 &lt;code&gt;Nginx&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;yum install nginx -y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改 &lt;code&gt;/etc/nginx/conf.d/default.conf&lt;/code&gt;，去除对 &lt;code&gt;IPv6&lt;/code&gt; 地址的监听（&lt;code&gt;CentOS 6&lt;/code&gt; 不支持 IPv6，需要取消对 IPv6 地址的监听，否则 &lt;code&gt;Nginx&lt;/code&gt; 不能成功启动），可参考下面的示例：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;server {
    listen       80 default_server;
    # listen       [::]:80 default_server;
    server_name  _;
    root         /usr/share/nginx/html;

    # Load configuration files for the default server block.
    include /etc/nginx/default.d/*.conf;

    location / {
    }

    error_page 404 /404.html;
        location = /40x.html {
    }

    error_page 500 502 503 504 /50x.html;
        location = /50x.html {
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改完成后，启动 &lt;code&gt;Nginx&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此时，可访问云主机的外网 HTTP 服务来确认是否已经安装成功。&lt;/p&gt;

&lt;p&gt;将 &lt;code&gt;Nginx&lt;/code&gt; 设置为&lt;code&gt;开机自动启动&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chkconfig nginx on
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-2-安装-mysql&#34;&gt;1.2 安装 MySQL&lt;/h3&gt;

&lt;p&gt;使用 &lt;code&gt;yum&lt;/code&gt; 安装 &lt;code&gt;MySQL&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;yum install mysql-server -y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装完成后，启动 &lt;code&gt;MySQL&lt;/code&gt; 服务：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;service mysqld restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置 &lt;code&gt;MySQL&lt;/code&gt; 账户 &lt;code&gt;root&lt;/code&gt; 密码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; /usr/bin/mysqladmin -u root password &#39;yourPassword4WordPress&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将 &lt;code&gt;MySQ&lt;/code&gt;L 设置为&lt;code&gt;开机自动启动&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chkconfig mysqld on
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-3-安装-php&#34;&gt;1.3 安装 PHP&lt;/h3&gt;

&lt;p&gt;使用 &lt;code&gt;yum&lt;/code&gt; 安装 &lt;code&gt;PHP&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;yum install php-fpm php-mysql -y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;（CentOs 6 默认已经安装了 PHP-FPM 及 PHP-MYSQL，上述命令执行的可能会提示已经安装。）&lt;/p&gt;

&lt;p&gt;安装之后，启动 &lt;code&gt;PHP-FPM&lt;/code&gt; 进程：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;service php-fpm start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动之后，可以使用下面的命令查看 &lt;code&gt;PHP-FPM&lt;/code&gt; 进程监听哪个端口 （PHP-FPM 默认监听 9000 端口）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;netstat -nlpt | grep php-fpm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;把 &lt;code&gt;PHP-FPM&lt;/code&gt; 也设置成&lt;code&gt;开机自动启动&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chkconfig php-fpm on
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;2-安装并配置-wordpress&#34;&gt;2. 安装并配置  WordPress&lt;/h2&gt;

&lt;h3 id=&#34;2-1-安装-wordpress&#34;&gt;2.1 安装 WordPress&lt;/h3&gt;

&lt;p&gt;配置好 &lt;code&gt;LNMP&lt;/code&gt; 环境后，继续使用 &lt;code&gt;yum&lt;/code&gt; 来安装 &lt;code&gt;WordPress&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;yum install wordpress -y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装完成后，就可以在 &lt;code&gt;/usr/share/wordpress&lt;/code&gt; 看到 &lt;code&gt;WordPress&lt;/code&gt; 的源代码了。&lt;/p&gt;

&lt;h3 id=&#34;2-2-配置-数据库&#34;&gt;2.2 配置 数据库&lt;/h3&gt;

&lt;p&gt;配进入 &lt;code&gt;MySQL&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -uroot --password=&#39;yourPassword4WordPress&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为 &lt;code&gt;WordPress&lt;/code&gt; 创建一个数据库：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CREATE DATABASE wordpress;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;MySQL&lt;/code&gt; 部分设置完了，我们退出 &lt;code&gt;MySQL&lt;/code&gt; 环境：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;exit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;把上述的 &lt;code&gt;DB&lt;/code&gt; 配置同步到 &lt;code&gt;WordPress&lt;/code&gt; 的&lt;code&gt;配置文件&lt;/code&gt;中，可参考下面的配置：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php
/**
 * The base configuration for WordPress
 *
 * The wp-config.php creation script uses this file during the
 * installation. You don&#39;t have to use the web site, you can
 * copy this file to &amp;quot;wp-config.php&amp;quot; and fill in the values.
 *
 * This file contains the following configurations:
 *
 * * MySQL settings
 * * Secret keys
 * * Database table prefix
 * * ABSPATH
 *
 * @link https://codex.wordpress.org/Editing_wp-config.php
 *
 * @package WordPress
 */

// ** MySQL settings - You can get this info from your web host ** //
/** The name of the database for WordPress */
define(&#39;DB_NAME&#39;, &#39;wordpress&#39;);

/** MySQL database username */
define(&#39;DB_USER&#39;, &#39;root&#39;);

/** MySQL database password */
define(&#39;DB_PASSWORD&#39;, &#39;yourPassword4WordPress&#39;);

/** MySQL hostname */
define(&#39;DB_HOST&#39;, &#39;localhost&#39;);

/** Database Charset to use in creating database tables. */
define(&#39;DB_CHARSET&#39;, &#39;utf8&#39;);

/** The Database Collate type. Don&#39;t change this if in doubt. */
define(&#39;DB_COLLATE&#39;, &#39;&#39;);

/**#@+
 * Authentication Unique Keys and Salts.
 *
 * Change these to different unique phrases!
 * You can generate these using the {@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service}
 * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again.
 *
 * @since 2.6.0
 */
define(&#39;AUTH_KEY&#39;,         &#39;put your unique phrase here&#39;);
define(&#39;SECURE_AUTH_KEY&#39;,  &#39;put your unique phrase here&#39;);
define(&#39;LOGGED_IN_KEY&#39;,    &#39;put your unique phrase here&#39;);
define(&#39;NONCE_KEY&#39;,        &#39;put your unique phrase here&#39;);
define(&#39;AUTH_SALT&#39;,        &#39;put your unique phrase here&#39;);
define(&#39;SECURE_AUTH_SALT&#39;, &#39;put your unique phrase here&#39;);
define(&#39;LOGGED_IN_SALT&#39;,   &#39;put your unique phrase here&#39;);
define(&#39;NONCE_SALT&#39;,       &#39;put your unique phrase here&#39;);

/**#@-*/

/**
 * WordPress Database Table prefix.
 *
 * You can have multiple installations in one database if you give each
 * a unique prefix. Only numbers, letters, and underscores please!
 */
$table_prefix  = &#39;wp_&#39;;

/**
 * See http://make.wordpress.org/core/2013/10/25/the-definitive-guide-to-disabling-auto-updates-in-wordpress-3-7
 */

/* Disable all file change, as RPM base installation are read-only */
define(&#39;DISALLOW_FILE_MODS&#39;, true);

/* Disable automatic updater, in case you want to allow
   above FILE_MODS for plugins, themes, ... */
define(&#39;AUTOMATIC_UPDATER_DISABLED&#39;, true);

/* Core update is always disabled, WP_AUTO_UPDATE_CORE value is ignore */

/**
 * For developers: WordPress debugging mode.
 *
 * Change this to true to enable the display of notices during development.
 * It is strongly recommended that plugin and theme developers use WP_DEBUG
 * in their development environments.
 *
 * For information on other constants that can be used for debugging,
 * visit the Codex.
 *
 * @link https://codex.wordpress.org/Debugging_in_WordPress
 */
define(&#39;WP_DEBUG&#39;, false);

/* That&#39;s all, stop editing! Happy blogging. */

/** Absolute path to the WordPress directory. */
if ( !defined(&#39;ABSPATH&#39;) )
    define(&#39;ABSPATH&#39;, &#39;/usr/share/wordpress&#39;);

/** Sets up WordPress vars and included files. */
require_once(ABSPATH . &#39;wp-settings.php&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-3-配置-nginx&#34;&gt;2.3 配置 Nginx&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;WordPress&lt;/code&gt; 已经安装完毕，我们配置&lt;code&gt;Nginx&lt;/code&gt; 把请求转发给 &lt;code&gt;PHP-FPM&lt;/code&gt; 来处理。&lt;/p&gt;

&lt;p&gt;首先，重命名默认的配置文件（因为默认的 Server 监听 80 端口，与 WordPress 的服务端口冲突，将其重命名为 .bak 后缀以禁用默认配置）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /etc/nginx/conf.d/

mv default.conf defaut.conf.bak
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在 /etc/nginx/conf.d 创建 wordpress.conf 配置，参考下面的内容：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;server {
    listen 80;
    root /usr/share/wordpress;
    location / {
        index index.php index.html index.htm;
        try_files $uri $uri/ /index.php index.php;
    }
    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    location ~ .php$ {
        fastcgi_pass   127.0.0.1:9000;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置后，通知 &lt;code&gt;Nginx&lt;/code&gt; 进程重新加载：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nginx -s reload
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-准备域名和解析&#34;&gt;3. 准备域名和解析&lt;/h2&gt;

&lt;h3 id=&#34;3-1域名注册&#34;&gt;3.1域名注册&lt;/h3&gt;

&lt;h3 id=&#34;3-2域名解析&#34;&gt;3.2域名解析&lt;/h3&gt;

&lt;p&gt;WordPress 博客已经部署完成。可以通过浏览器访问博客查看效果。&lt;/p&gt;

&lt;p&gt;通过IP地址查看：&lt;/p&gt;

&lt;p&gt;博客访问地址：&lt;code&gt;http://你的服务器公网ip地址/wp-admin/install.php&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;通过域名查看：&lt;/p&gt;

&lt;p&gt;博客访问地址：&lt;code&gt;http://你的域名/wp-admin/install.php&lt;/code&gt;。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>