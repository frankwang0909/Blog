<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on Frank Wang&#39;s Coding World</title>
    <link>http://www.wangxingfeng.com/tags/github/index.xml</link>
    <description>Recent content in Github on Frank Wang&#39;s Coding World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <atom:link href="http://www.wangxingfeng.com/tags/github/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>用Hugo快速搭建个人静态博客</title>
      <link>http://www.wangxingfeng.com/build-blog-with-hugo.html</link>
      <pubDate>Mon, 03 Apr 2017 20:49:23 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/build-blog-with-hugo.html</guid>
      <description>

&lt;p&gt;最近心血来潮，想要重新折腾一番自己的博客。于是，发现了 Hugo 比之前使用的 Jekyll 更好用。本文是个人参照&lt;a href=&#34;https://gohugo.io/overview/quickstart/&#34;&gt;Hugo官网&lt;/a&gt; 搭建个人博客的记录。&lt;/p&gt;

&lt;h2 id=&#34;step-1-install-hugo-下载-安装-hugo&#34;&gt;Step 1. Install Hugo 下载、安装 Hugo&lt;/h2&gt;

&lt;p&gt;下载地址：&lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;https://github.com/spf13/hugo/releases&lt;/a&gt;。
根据自己的操作系统，下载对应的安装包。我的操作系统是&lt;code&gt;Win7 64bit&lt;/code&gt;， 选择了&lt;code&gt;hugo_0.19_Windows-64bit.zip&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;下载完成之后，解压的文件夹包含以下3个文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo_0.19_windows_amd64.exe
LICENSE.md
README.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将 &lt;code&gt;hugo_0.19_windows_amd64.exe&lt;/code&gt; 重命名为&lt;code&gt;hugo.exe&lt;/code&gt;。在你的软件安装盘新增名为&lt;code&gt;hugo&lt;/code&gt;的文件目录，在里面在新建一个&lt;code&gt;bin&lt;/code&gt;子目录。然后将&lt;code&gt;hugo.exe&lt;/code&gt;放到&lt;code&gt;hugo\bin&lt;/code&gt;目录下。再将这个&lt;code&gt;bin&lt;/code&gt;目录的路径添加到&lt;code&gt;系统环境变量&lt;/code&gt;中。&lt;/p&gt;

&lt;p&gt;完成以上步骤后，打开命令行输入&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;    hugo help
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果得到如下信息，说明安装成功。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;    hugo is the main command, used to build your Hugo site.

    Hugo is a Fast and Flexible Static Site Generator
    built with love by spf13 and friends in Go.

    Complete documentation is available at http://gohugo.io/.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-2-创建一个名为-blog-的-hugo-站点&#34;&gt;Step 2. 创建一个名为  blog 的 Hugo 站点&lt;/h2&gt;

&lt;p&gt;我希望在E盘下创建站点，所以我先切换目录&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;    cd e:
    e:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后输入命令：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;    hugo new site blog 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;得到如下提示创建成功的信息：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Congratulations! Your new Hugo site is created in E:\blog.
Just a few more steps and you&#39;re ready to go:
1. Download a theme into the same-named folder.
Choose a theme from https://themes.gohugo.io/, or
create your own with the &amp;quot;hugo new theme &amp;lt;THEMENAME&amp;gt;&amp;quot; command.
2. Perhaps you want to add some content. You can add single files
with &amp;quot;hugo new &amp;lt;SECTIONNAME&amp;gt;\&amp;lt;FILENAME&amp;gt;.&amp;lt;FORMAT&amp;gt;&amp;quot;.
3. Start the built-in live server via &amp;quot;hugo server&amp;quot;.
Visit https://gohugo.io/ for quickstart guide and full documentation.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;进入该目录，可以看到自动生成了5个目录和一个配置文件config.toml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;|-- archetypes
|-- content   #存放内容的目录
|-- data      
|-- layouts   
|-- static    #存放静态资源（图片,css,js）
|-- themes    #存放主题
|-- config.toml  #配置文件
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-3-添加内容&#34;&gt;Step 3. 添加内容&lt;/h2&gt;

&lt;p&gt;切换到该目录下，然后输入如下命令，会在&lt;code&gt;content&lt;/code&gt;的目录下创建&lt;code&gt;post&lt;/code&gt;目录，在&lt;code&gt;post&lt;/code&gt;目录下创建名为&lt;code&gt;test.md&lt;/code&gt;的文件。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;    cd blog
    hugo new post/test.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;提示文件创建成功：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;    E:\blog\content\post\test.md created
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;用文本编辑器打开文件&lt;code&gt;test.md&lt;/code&gt;文件
可以看到如下内容：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;    +++
    date = &amp;quot;2017-01-02T17:45:06+08:00&amp;quot;  #创建文件的时间
    title = &amp;quot;test&amp;quot;                      #文件的标题
    draft = true                        # 是否为草稿
    +++
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上述内容为自动创建的与文章有关的内容。自己也可以在两个&lt;code&gt;+++&lt;/code&gt;之间添加如下内容：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;    image = &amp;quot;hugo.png&amp;quot;            #指定图片。
    category = &amp;quot;test&amp;quot;             #文章的类别
    tags = [&amp;quot;Hugo&amp;quot;, &amp;quot;intro&amp;quot;]      #文章的标签分类。
    url = &amp;quot;new_start&amp;quot;             #该文章访问时的相对的url地址，默认为文件名。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更多的设置，可以参考&lt;a href=&#34;https://gohugo.io/content/front-matter/&#34;&gt;官方文档&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;以后写博客文章就是这样创建&lt;code&gt;markdown&lt;/code&gt;文件, 之后通过&lt;code&gt;Hugo&lt;/code&gt;编译成静态的html文件。&lt;/p&gt;

&lt;h2 id=&#34;step-4-添加主题&#34;&gt;Step 4. 添加主题&lt;/h2&gt;

&lt;p&gt;官方提供了多种主题可供选择，具体在 &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;https://themes.gohugo.io/&lt;/a&gt; 可以找到。&lt;/p&gt;

&lt;p&gt;找到想要的主题后，切换到&lt;code&gt;themes&lt;/code&gt;目录（该目录可以存放多个不同的主题）。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;    cd themes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;由于需要使用到Git下载主题，以及版本管理和代码推送。需要事先下载安装好&lt;a href=&#34;https://git-for-windows.github.io/&#34;&gt;Git&lt;/a&gt;，关于如何安装和使用Git，可以参考我之前的一篇文章：&lt;a href=&#34;http://www.wangxingfeng.com/git-intro/&#34;&gt;Git学习笔记&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;把选定的主题下载到&lt;code&gt;themes&lt;/code&gt;目录下。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;    git clone https://github.com/dim0627/hugo-icarus-theme.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-5-启动服务-本地预览&#34;&gt;Step 5. 启动服务，本地预览&lt;/h2&gt;

&lt;p&gt;先从&lt;code&gt;themes&lt;/code&gt;目录下退回到&lt;code&gt;blog&lt;/code&gt;目录, 然后启动服务。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;    cd ..
    hugo server --theme=hugo-icarus-theme --buildDrafts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在浏览器中打开 &lt;a href=&#34;http://localhost:1313/&#34;&gt;http://localhost:1313/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;step-6-修改配置文件-config-toml&#34;&gt;Step 6. 修改配置文件 config.toml&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;    languageCode = &amp;quot;zh-cn&amp;quot;
    title = &amp;quot;Frank Wang&#39;s Coding World&amp;quot;
    baseurl = &amp;quot;http://www.wangxingfeng.com/&amp;quot;  

    [Params]
        Author =&amp;quot;Frank Wang&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-7-生成网站&#34;&gt;Step 7.  生成网站&lt;/h2&gt;

&lt;p&gt;7.1 改变文章&lt;code&gt;draft&lt;/code&gt;（草稿）状态：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo undraft content/post/*.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;7.2  启动&lt;code&gt;hugo&lt;/code&gt;, 生成发布文件到&lt;code&gt;public&lt;/code&gt;目录下。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;    hugo --theme=even
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-8-托管到-github-pages&#34;&gt;Step 8. 托管到 GitHub Pages&lt;/h2&gt;

&lt;p&gt;8.1 使用 &lt;code&gt;Git&lt;/code&gt; 来进行版本管理&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;    git init
    echo &amp;quot;/public/&amp;quot; &amp;gt;&amp;gt; .gitignore
    echo &amp;quot;/themes/&amp;quot; &amp;gt;&amp;gt; .gitignore
    git add --all
    git commit -m &amp;quot;Initial commit&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;8.2 创建 &lt;code&gt;Git&lt;/code&gt; 远程仓库：&lt;/p&gt;

&lt;p&gt;登录你的 &lt;code&gt;GitHub&lt;/code&gt;. 创建一个新的仓库，仓库名为 &lt;code&gt;Github用户.github.io&lt;/code&gt;, 比如我的是&lt;code&gt;frankwang0909.github.io&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;8.3. 添加 &lt;code&gt;Git&lt;/code&gt; 远程仓库，并提交代码。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;    cd public
    git init
    git remote add origin git@github.com:frankwang0909/frankwang0909.github.io.git

    git add --all
    git commit -m &amp;quot;blog added&amp;quot;
    git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;8.4 以后有内容改动，提交代码.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;    (cd ..; hugo --theme=hugo_theme_robust)
    git add --all
    git commit -m &amp;quot;&amp;lt;some change message&amp;gt;&amp;quot;
    git push -u origin master
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>